# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
      - job: Build
        strategy:
          matrix:
            go_1_13:
              go_version: '1.13'
            go_1_14:
              go_version: '1.14'
        steps:
        - script: |
            go get -v -t -d ./...
            if [ -f Gopkg.toml ]; then
                curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                dep ensure
            fi
          displayName: Get dependencies
        - task: GoTool@0
          inputs:
            version: '^$(go_version)'
        - script: |
            curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v0.4.2/gotestsum_0.4.2_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.25.0
            curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
          displayName: 'Prepare buikd'
        - script: |
            time make lint
          displayName: Lint
        - script: |
            time make build
          displayName: 'Build'
        - script: |
            time make coverage
          displayName: 'Coverage'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Pipeline.Workspace)'
            artifact: 'gopack-$(go_version)'
            publishLocation: 'pipeline'